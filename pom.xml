<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>bid.adonis.lau</groupId>
    <artifactId>springboot-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>springboot-demo</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.6.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <druid>1.0.20</druid>
    </properties>

    <modules>
        <!-- 基础 – 入门篇 -->
        <!-- Spring Boot 之 HelloWorld 详解 -->
        <module>springboot-helloworld</module>
        <!-- Spring Boot 之配置文件详解 -->
        <module>springboot-properties-one</module>
        <module>springboot-properties-two</module>

        <!-- 基础 - Web 业务开发篇 -->
        <!-- Spring Boot 实现 Restful 服务，基于 HTTP / JSON 传输 -->
        <module>springboot-restful</module>
        <!-- Spring Boot 集成 FreeMarker -->
        <module>springboot-freemarker</module>
        <!-- Spring Boot 集成 FreeMarker -->
        <module>springboot-jsp</module>
        <!-- Spring Boot HTTP over JSON 的错误码异常处理 -->
        <module>springboot-validation-over-json</module>

        <!-- 基础 – 数据存储篇 -->
        <!-- Spring Boot 整合 Hibername Durid 的完整 Web 案例 -->
        <module>springboot-hibernate-druid</module>
        <!-- Spring Boot 整合 Hibername Durid 多数据源的完整 Web 案例 -->
        <module>springboot-hibernate-mutil-datasource</module>

        <!-- 基础 – 数据缓存篇 -->
        <!-- Spring Boot 整合 Redis 实现缓存 -->
        <module>springboot-hibernate-redis</module>
    </modules>

    <dependencies>
        <!-- Spring Boot Web 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- Spring Boot Test 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Spring Boot 配置文件 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Spring Boot AOP 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--Spring Boot 热部署-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>false</optional>
        </dependency>

        <!--Junit4-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- 设定主仓库，按设定顺序进行查找。 -->
    <repositories>

        <repository>
            <id>jeesite-repos</id>
            <name>Jeesite Repository</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
        </repository>

    </repositories>

    <!-- 设定插件仓库 -->
    <pluginRepositories>

        <pluginRepository>
            <id>jeesite-repos</id>
            <name>Jeesite Repository</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
        </pluginRepository>

    </pluginRepositories>

</project>
